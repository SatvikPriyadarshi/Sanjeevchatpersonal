{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sanjeevchatpersonal\\\\frontend\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000', {\n      transports: ['websocket'],\n      autoConnect: false\n    });\n\n    // Connection events\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setIsConnected(false);\n    });\n\n    // User events\n    newSocket.on('user-joined', userData => {\n      console.log('User joined:', userData);\n      setUser(userData);\n    });\n    newSocket.on('error', error => {\n      console.error('Socket error:', error);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Connect to server\n  const connect = () => {\n    if (socket && !isConnected) {\n      socket.connect();\n    }\n  };\n\n  // Disconnect from server\n  const disconnect = () => {\n    if (socket && isConnected) {\n      socket.disconnect();\n    }\n  };\n\n  // Join user with username\n  const joinUser = (username, avatar) => {\n    if (socket && isConnected) {\n      socket.emit('join-user', {\n        username,\n        avatar\n      });\n    }\n  };\n\n  // Join a room\n  const joinRoom = roomId => {\n    return new Promise((resolve, reject) => {\n      if (socket && isConnected) {\n        socket.emit('join-room', {\n          roomId\n        });\n        const timeout = setTimeout(() => {\n          socket.off('room-joined');\n          socket.off('join-room-error');\n          reject(new Error('Timeout joining room'));\n        }, 5000);\n        socket.once('room-joined', roomData => {\n          clearTimeout(timeout);\n          resolve(roomData);\n        });\n        socket.once('join-room-error', error => {\n          clearTimeout(timeout);\n          reject(new Error(error.message || 'Failed to join room'));\n        });\n      } else {\n        reject(new Error('Socket not connected'));\n      }\n    });\n  };\n\n  // Leave room\n  const leaveRoom = () => {\n    if (socket && isConnected) {\n      socket.emit('leave-room');\n    }\n  };\n\n  // Send chat message\n  const sendMessage = content => {\n    if (socket && isConnected) {\n      socket.emit('chat-message', {\n        content\n      });\n    }\n  };\n\n  // Start typing indicator\n  const startTyping = () => {\n    if (socket && isConnected) {\n      socket.emit('typing-start');\n    }\n  };\n\n  // Stop typing indicator\n  const stopTyping = () => {\n    if (socket && isConnected) {\n      socket.emit('typing-stop');\n    }\n  };\n\n  // Get room status\n  const getRoomStatus = () => {\n    return new Promise((resolve, reject) => {\n      if (socket && isConnected) {\n        socket.emit('get-room-status');\n\n        // Listen for the response\n        const timeout = setTimeout(() => {\n          socket.off('room-status-response');\n          reject(new Error('Timeout waiting for room status'));\n        }, 5000);\n        socket.once('room-status-response', rooms => {\n          clearTimeout(timeout);\n          resolve(rooms || []);\n        });\n      } else {\n        reject(new Error('Socket not connected'));\n      }\n    });\n  };\n  const value = {\n    socket,\n    isConnected,\n    user,\n    connect,\n    disconnect,\n    joinUser,\n    joinRoom,\n    leaveRoom,\n    sendMessage,\n    startTyping,\n    stopTyping,\n    getRoomStatus\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"KXeJ0rEPmG/lgKXenPJgoKC8Rg0=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","isConnected","setIsConnected","user","setUser","newSocket","process","env","REACT_APP_BACKEND_URL","transports","autoConnect","on","console","log","error","userData","close","connect","disconnect","joinUser","username","avatar","emit","joinRoom","roomId","Promise","resolve","reject","timeout","setTimeout","off","once","roomData","clearTimeout","message","leaveRoom","sendMessage","content","startTyping","stopTyping","getRoomStatus","rooms","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sanjeevchatpersonal/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    const newSocket = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000', {\r\n      transports: ['websocket'],\r\n      autoConnect: false\r\n    });\r\n\r\n    // Connection events\r\n    newSocket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setIsConnected(true);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    // User events\r\n    newSocket.on('user-joined', (userData) => {\r\n      console.log('User joined:', userData);\r\n      setUser(userData);\r\n    });\r\n\r\n    newSocket.on('error', (error) => {\r\n      console.error('Socket error:', error);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Connect to server\r\n  const connect = () => {\r\n    if (socket && !isConnected) {\r\n      socket.connect();\r\n    }\r\n  };\r\n\r\n  // Disconnect from server\r\n  const disconnect = () => {\r\n    if (socket && isConnected) {\r\n      socket.disconnect();\r\n    }\r\n  };\r\n\r\n  // Join user with username\r\n  const joinUser = (username, avatar) => {\r\n    if (socket && isConnected) {\r\n      socket.emit('join-user', { username, avatar });\r\n    }\r\n  };\r\n\r\n  // Join a room\r\n  const joinRoom = (roomId) => {\r\n    return new Promise((resolve, reject) => {\r\n      if (socket && isConnected) {\r\n        socket.emit('join-room', { roomId });\r\n        \r\n        const timeout = setTimeout(() => {\r\n          socket.off('room-joined');\r\n          socket.off('join-room-error');\r\n          reject(new Error('Timeout joining room'));\r\n        }, 5000);\r\n\r\n        socket.once('room-joined', (roomData) => {\r\n          clearTimeout(timeout);\r\n          resolve(roomData);\r\n        });\r\n\r\n        socket.once('join-room-error', (error) => {\r\n          clearTimeout(timeout);\r\n          reject(new Error(error.message || 'Failed to join room'));\r\n        });\r\n      } else {\r\n        reject(new Error('Socket not connected'));\r\n      }\r\n    });\r\n  };\r\n\r\n  // Leave room\r\n  const leaveRoom = () => {\r\n    if (socket && isConnected) {\r\n      socket.emit('leave-room');\r\n    }\r\n  };\r\n\r\n  // Send chat message\r\n  const sendMessage = (content) => {\r\n    if (socket && isConnected) {\r\n      socket.emit('chat-message', { content });\r\n    }\r\n  };\r\n\r\n  // Start typing indicator\r\n  const startTyping = () => {\r\n    if (socket && isConnected) {\r\n      socket.emit('typing-start');\r\n    }\r\n  };\r\n\r\n  // Stop typing indicator\r\n  const stopTyping = () => {\r\n    if (socket && isConnected) {\r\n      socket.emit('typing-stop');\r\n    }\r\n  };\r\n\r\n  // Get room status\r\n  const getRoomStatus = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (socket && isConnected) {\r\n        socket.emit('get-room-status');\r\n        \r\n        // Listen for the response\r\n        const timeout = setTimeout(() => {\r\n          socket.off('room-status-response');\r\n          reject(new Error('Timeout waiting for room status'));\r\n        }, 5000);\r\n\r\n        socket.once('room-status-response', (rooms) => {\r\n          clearTimeout(timeout);\r\n          resolve(rooms || []);\r\n        });\r\n      } else {\r\n        reject(new Error('Socket not connected'));\r\n      }\r\n    });\r\n  };\r\n\r\n  const value = {\r\n    socket,\r\n    isConnected,\r\n    user,\r\n    connect,\r\n    disconnect,\r\n    joinUser,\r\n    joinRoom,\r\n    leaveRoom,\r\n    sendMessage,\r\n    startTyping,\r\n    stopTyping,\r\n    getRoomStatus\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}