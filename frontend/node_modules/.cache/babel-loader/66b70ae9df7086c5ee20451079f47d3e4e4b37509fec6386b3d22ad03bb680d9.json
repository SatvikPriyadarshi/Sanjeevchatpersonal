{"ast":null,"code":"// Frontend Configuration\n// This file centralizes all configuration settings\n\n// Get backend URL from environment variable or use default\nconst getBackendUrl = () => {\n  // First try environment variable\n  if (process.env.REACT_APP_BACKEND_URL) {\n    return process.env.REACT_APP_BACKEND_URL;\n  }\n\n  // Fallback to localhost for development\n  return 'http://localhost:5000';\n};\n\n// Get the current host IP for network access\nconst getCurrentHostIP = () => {\n  const hostname = window.location.hostname;\n\n  // If we're accessing via an IP address, return it\n  if (hostname !== 'localhost' && hostname !== '127.0.0.1') {\n    return hostname;\n  }\n\n  // Default to localhost\n  return 'localhost';\n};\n\n// Configuration object\nconst config = {\n  // Backend API URL\n  BACKEND_URL: getBackendUrl(),\n  // WebSocket URL (same as backend URL)\n  WEBSOCKET_URL: getBackendUrl(),\n  // Current host IP\n  HOST_IP: getCurrentHostIP(),\n  // Frontend port (default React port)\n  FRONTEND_PORT: 3000,\n  // Backend port\n  BACKEND_PORT: 5000,\n  // Socket.IO configuration\n  SOCKET_CONFIG: {\n    transports: ['websocket', 'polling'],\n    autoConnect: false,\n    timeout: 20000,\n    forceNew: true\n  },\n  // App metadata\n  APP_NAME: 'ChatApp',\n  APP_VERSION: '1.0.0'\n};\n\n// Helper functions\nexport const getBackendApiUrl = () => config.BACKEND_URL;\nexport const getWebSocketUrl = () => config.WEBSOCKET_URL;\nexport const getSocketConfig = () => config.SOCKET_CONFIG;\n\n// Export default config\nexport default config;","map":{"version":3,"names":["getBackendUrl","process","env","REACT_APP_BACKEND_URL","getCurrentHostIP","hostname","window","location","config","BACKEND_URL","WEBSOCKET_URL","HOST_IP","FRONTEND_PORT","BACKEND_PORT","SOCKET_CONFIG","transports","autoConnect","timeout","forceNew","APP_NAME","APP_VERSION","getBackendApiUrl","getWebSocketUrl","getSocketConfig"],"sources":["D:/Sanjeevchatpersonal/frontend/src/config.js"],"sourcesContent":["// Frontend Configuration\r\n// This file centralizes all configuration settings\r\n\r\n// Get backend URL from environment variable or use default\r\nconst getBackendUrl = () => {\r\n  // First try environment variable\r\n  if (process.env.REACT_APP_BACKEND_URL) {\r\n    return process.env.REACT_APP_BACKEND_URL;\r\n  }\r\n  \r\n  // Fallback to localhost for development\r\n  return 'http://localhost:5000';\r\n};\r\n\r\n// Get the current host IP for network access\r\nconst getCurrentHostIP = () => {\r\n  const hostname = window.location.hostname;\r\n  \r\n  // If we're accessing via an IP address, return it\r\n  if (hostname !== 'localhost' && hostname !== '127.0.0.1') {\r\n    return hostname;\r\n  }\r\n  \r\n  // Default to localhost\r\n  return 'localhost';\r\n};\r\n\r\n// Configuration object\r\nconst config = {\r\n  // Backend API URL\r\n  BACKEND_URL: getBackendUrl(),\r\n  \r\n  // WebSocket URL (same as backend URL)\r\n  WEBSOCKET_URL: getBackendUrl(),\r\n  \r\n  // Current host IP\r\n  HOST_IP: getCurrentHostIP(),\r\n  \r\n  // Frontend port (default React port)\r\n  FRONTEND_PORT: 3000,\r\n  \r\n  // Backend port\r\n  BACKEND_PORT: 5000,\r\n  \r\n  // Socket.IO configuration\r\n  SOCKET_CONFIG: {\r\n    transports: ['websocket', 'polling'],\r\n    autoConnect: false,\r\n    timeout: 20000,\r\n    forceNew: true,\r\n  },\r\n  \r\n  // App metadata\r\n  APP_NAME: 'ChatApp',\r\n  APP_VERSION: '1.0.0',\r\n};\r\n\r\n// Helper functions\r\nexport const getBackendApiUrl = () => config.BACKEND_URL;\r\nexport const getWebSocketUrl = () => config.WEBSOCKET_URL;\r\nexport const getSocketConfig = () => config.SOCKET_CONFIG;\r\n\r\n// Export default config\r\nexport default config;"],"mappings":"AAAA;AACA;;AAEA;AACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;EAC1B;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,qBAAqB,EAAE;IACrC,OAAOF,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAC1C;;EAEA;EACA,OAAO,uBAAuB;AAChC,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ;;EAEzC;EACA,IAAIA,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,WAAW,EAAE;IACxD,OAAOA,QAAQ;EACjB;;EAEA;EACA,OAAO,WAAW;AACpB,CAAC;;AAED;AACA,MAAMG,MAAM,GAAG;EACb;EACAC,WAAW,EAAET,aAAa,CAAC,CAAC;EAE5B;EACAU,aAAa,EAAEV,aAAa,CAAC,CAAC;EAE9B;EACAW,OAAO,EAAEP,gBAAgB,CAAC,CAAC;EAE3B;EACAQ,aAAa,EAAE,IAAI;EAEnB;EACAC,YAAY,EAAE,IAAI;EAElB;EACAC,aAAa,EAAE;IACbC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;IACpCC,WAAW,EAAE,KAAK;IAClBC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE;EACZ,CAAC;EAED;EACAC,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAMb,MAAM,CAACC,WAAW;AACxD,OAAO,MAAMa,eAAe,GAAGA,CAAA,KAAMd,MAAM,CAACE,aAAa;AACzD,OAAO,MAAMa,eAAe,GAAGA,CAAA,KAAMf,MAAM,CAACM,aAAa;;AAEzD;AACA,eAAeN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}